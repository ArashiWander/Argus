version: '3.8'

services:
  argus-app:
    build: .
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
    volumes:
      - argus-logs:/app/logs
    depends_on:
      - redis
      - postgres
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - argus-static:/usr/share/nginx/html
    depends_on:
      - argus-app
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=argus
      - POSTGRES_USER=argus
      - POSTGRES_PASSWORD=argus_password
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped

  influxdb:
    image: influxdb:2.7-alpine
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=argus_metrics
      - INFLUXDB_ADMIN_USER=argus
      - INFLUXDB_ADMIN_PASSWORD=argus_password
    volumes:
      - influxdb-data:/var/lib/influxdb2
    restart: unless-stopped

  elasticsearch:
    image: elasticsearch:8.8.0
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    restart: unless-stopped

volumes:
  argus-logs:
  argus-static:
  redis-data:
  postgres-data:
  influxdb-data:
  elasticsearch-data: